{
  "identifier": "HotSpotCompilation-178[havlak.HavlakLoopFinder.setLoopAttributes(int, Vector, SimpleLoop)]",
  "method": "havlak.HavlakLoopFinder.setLoopAttributes(int, som.Vector, havlak.SimpleLoop)void",
  "entryBCI": -1,
  "codeSignature": "e2457f4a64cb124b8b1da9827c7c7f869005c6e41ad9b9371c27f78a6d71401c",
  "graphSignature": "cb0e8e86deaeb81c2e614667b307071cb405bc651bc8d00fed21e28af4c16982",
  "result": true,
  "profiles": [{
    "method": "havlak.HavlakLoopFinder.setLoopAttributes(int, som.Vector, havlak.SimpleLoop)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "havlak.HavlakLoopFinder.setLoopAttributes(int, som.Vector, havlak.SimpleLoop)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 7,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 18,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 21,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.UnionFindNode.setLoop(havlak.SimpleLoop)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "havlak.HavlakLoopFinder$5.<init>(havlak.HavlakLoopFinder, int, havlak.SimpleLoop)void",
    "isMature": false,
    "compilerIRSize": 19,
    "data": [{
      "bci": 16,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Vector.forEach(som.ForEachInterface)void",
    "isMature": true,
    "compilerIRSize": 63,
    "data": [{
      "bci": 10,
      "branchTakenProbability": 0.34481830417227455
    },
    {
      "bci": 19,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 20,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lhavlak/HavlakLoopFinder$1;",
          "probability": 0.6286976170912079
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$2;",
          "probability": 0.13804437140509448
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$4;",
          "probability": 0.10353327855382087
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$5;",
          "probability": 0.07785538208709943
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$6;",
          "probability": 0.025986031224322102
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$3;",
          "probability": 0.025883319638455218
        }],
        "notRecordedProbability": 0.0
      }
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$5.apply(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": 274,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$5.apply(havlak.UnionFindNode)void",
    "isMature": true,
    "compilerIRSize": 256,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 8,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 15,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 21,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 28,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 29,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 33,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 36,
      "branchTakenProbability": 0.7777777777777778
    },
    {
      "bci": 40,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 47,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 58,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 61,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.UnionFindNode.union(havlak.UnionFindNode)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "havlak.SimpleLoop.addNode(havlak.BasicBlock)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.SimpleLoop.setParent(havlak.SimpleLoop)void",
    "isMature": false,
    "compilerIRSize": 204,
    "data": [{
      "bci": 10,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.SimpleLoop.addChildLoop(havlak.SimpleLoop)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Set.add(java.lang.Object)void",
    "isMature": true,
    "compilerIRSize": 298,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lsom/Set;",
          "probability": 0.5385666861941028
        },
        {
          "type": "Lsom/IdentitySet;",
          "probability": 0.4614333138058973
        }],
        "notRecordedProbability": 0.0
      }
    },
    {
      "bci": 5,
      "branchTakenProbability": 0.0388444270934999
    },
    {
      "bci": 13,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.IdentitySet.contains(java.lang.Object)boolean",
    "isMature": false,
    "compilerIRSize": 0,
    "data": []
  },
  {
    "method": "java.lang.invoke.Invokers$Holder.linkToTargetMethod(java.lang.Object, java.lang.Object)java.lang.Object",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Ljava/lang/invoke/DirectMethodHandle$Constructor;",
          "probability": 1.0
        }],
        "notRecordedProbability": 0.0
      }
    }]
  },
  {
    "method": "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object)java.lang.Object",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "java.lang.invoke.DirectMethodHandle.allocateInstance(java.lang.Object)java.lang.Object",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 12,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "java.lang.invoke.DirectMethodHandle.constructorMethod(java.lang.Object)java.lang.Object",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "stableLambdaName": "som.IdentitySet$$Lambda/0x00007f3d2c00a628.<init>(Object)",
    "method": "som.IdentitySet$$Lambda/0x00007f3d2c00a628.<init>(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Set.hasSome(som.TestInterface)boolean",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Vector.hasSome(som.TestInterface)boolean",
    "isMature": true,
    "compilerIRSize": 198,
    "data": [{
      "bci": 10,
      "branchTakenProbability": 0.5344997266265719
    },
    {
      "bci": 19,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 20,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lsom/IdentitySet$$Lambda.0x00007f3d2c00a628;",
          "probability": 0.5184402161146348
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$4$$Lambda.0x00007f3d2c00a408;",
          "probability": 0.3333333333333333
        },
        {
          "type": "Lsom/Set$$Lambda.0x00007f3d2c009938;",
          "probability": 0.14822645055203196
        }],
        "notRecordedProbability": 0.0
      }
    },
    {
      "bci": 25,
      "branchTakenProbability": 0.962179938924125
    }]
  },
  {
    "stableLambdaName": "som.IdentitySet$$Lambda/0x00007f3d2c00a628.test(Object)",
    "method": "som.IdentitySet$$Lambda/0x00007f3d2c00a628.test(java.lang.Object)boolean",
    "isMature": false,
    "compilerIRSize": 0,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.IdentitySet.lambda$contains$0(java.lang.Object, java.lang.Object)boolean",
    "isMature": true,
    "compilerIRSize": 0,
    "data": [{
      "bci": 2,
      "branchTakenProbability": 0.998426435877262
    }]
  },
  {
    "method": "som.Vector.append(java.lang.Object)void",
    "isMature": true,
    "compilerIRSize": 119,
    "data": [{
      "bci": 8,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 9,
      "branchTakenProbability": 0.9996094512790471
    },
    {
      "bci": 22,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 39,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "java.util.Arrays.copyOf(java.lang.Object[], int)java.lang.Object[]",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 3,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 6,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "java.util.Arrays.copyOf(java.lang.Object[], int, java.lang.Class)java.lang.Object[]",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 3,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 7,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 14,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 18,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 21,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "UNKNOWN",
        "types": [],
        "notRecordedProbability": 1.0
      }
    },
    {
      "bci": 30,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 32,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 35,
      "exceptionSeen": "FALSE"
    }]
  }]
}