{
  "identifier": "HotSpotCompilation-99[som.Vector.forEach(ForEachInterface)]",
  "method": "som.Vector.forEach(som.ForEachInterface)void",
  "entryBCI": -1,
  "codeSignature": "1ceef5f49b2118e235ec8ce63c4be791996c1d80365560515379106e10d2d260",
  "graphSignature": "0b29fafcbf3569916f25b514139b157dd3e31c584ac0d38729ac74a9ea9a5bc5",
  "result": true,
  "profiles": [{
    "method": "som.Vector.forEach(som.ForEachInterface)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "som.Vector.forEach(som.ForEachInterface)void",
    "isMature": true,
    "compilerIRSize": 0,
    "data": [{
      "bci": 10,
      "branchTakenProbability": 0.5302402651201326
    },
    {
      "bci": 19,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 20,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lhavlak/HavlakLoopFinder$2;",
          "probability": 0.2962962962962963
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$4;",
          "probability": 0.2222222222222222
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$1;",
          "probability": 0.2037037037037037
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$5;",
          "probability": 0.16666666666666666
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$6;",
          "probability": 0.05555555555555555
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$3;",
          "probability": 0.05555555555555555
        }],
        "notRecordedProbability": 0.0
      }
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$2.apply(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": 0,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$4.apply(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$1.apply(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$5.apply(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$6.apply(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$3.apply(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$3.apply(havlak.UnionFindNode)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Vector.append(java.lang.Object)void",
    "isMature": true,
    "compilerIRSize": 119,
    "data": [{
      "bci": 8,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 9,
      "branchTakenProbability": 0.9996094512790471
    },
    {
      "bci": 22,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 39,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "java.util.Arrays.copyOf(java.lang.Object[], int)java.lang.Object[]",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 3,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 6,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "java.util.Arrays.copyOf(java.lang.Object[], int, java.lang.Class)java.lang.Object[]",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 3,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 7,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 14,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 18,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 21,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "UNKNOWN",
        "types": [],
        "notRecordedProbability": 1.0
      }
    },
    {
      "bci": 30,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 32,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 35,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$6.apply(java.lang.Integer)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 8,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 19,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 23,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 26,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 27,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 30,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 40,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 50,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.UnionFindNode.findSet()havlak.UnionFindNode",
    "isMature": false,
    "compilerIRSize": 0,
    "data": [{
      "bci": 12,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 15,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 19,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 23,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 26,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 29,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 34,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 38,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 52,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Vector.<init>()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "som.Vector.<init>(int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 6,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "java.lang.invoke.Invokers$Holder.linkToTargetMethod(java.lang.Object, java.lang.Object)java.lang.Object",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Ljava/lang/invoke/DirectMethodHandle$Constructor;",
          "probability": 1.0
        }],
        "notRecordedProbability": 0.0
      }
    }]
  },
  {
    "method": "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object)java.lang.Object",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "java.lang.invoke.DirectMethodHandle.allocateInstance(java.lang.Object)java.lang.Object",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 12,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "java.lang.invoke.DirectMethodHandle.constructorMethod(java.lang.Object)java.lang.Object",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "stableLambdaName": "havlak.UnionFindNode$$Lambda/0x00007f3d2c009fb8.<init>(UnionFindNode)",
    "method": "havlak.UnionFindNode$$Lambda/0x00007f3d2c009fb8.<init>(havlak.UnionFindNode)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$5.apply(havlak.UnionFindNode)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 8,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 15,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 21,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 28,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 29,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 33,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 36,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 40,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 47,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 58,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 61,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.UnionFindNode.union(havlak.UnionFindNode)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "havlak.SimpleLoop.addNode(havlak.BasicBlock)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.SimpleLoop.setParent(havlak.SimpleLoop)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 10,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.SimpleLoop.addChildLoop(havlak.SimpleLoop)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Set.add(java.lang.Object)void",
    "isMature": true,
    "compilerIRSize": 0,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lsom/Set;",
          "probability": 0.5428802588996764
        },
        {
          "type": "Lsom/IdentitySet;",
          "probability": 0.4571197411003236
        }],
        "notRecordedProbability": 0.0
      }
    },
    {
      "bci": 5,
      "branchTakenProbability": 0.03802588996763754
    },
    {
      "bci": 13,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.IdentitySet.contains(java.lang.Object)boolean",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "stableLambdaName": "som.IdentitySet$$Lambda/0x00007f3d2c00a628.<init>(Object)",
    "method": "som.IdentitySet$$Lambda/0x00007f3d2c00a628.<init>(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Set.hasSome(som.TestInterface)boolean",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Vector.hasSome(som.TestInterface)boolean",
    "isMature": true,
    "compilerIRSize": 0,
    "data": [{
      "bci": 10,
      "branchTakenProbability": 0.5357558139534884
    },
    {
      "bci": 19,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 20,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lsom/IdentitySet$$Lambda.0x00007f3d2c00a628;",
          "probability": 0.5178459611772073
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$4$$Lambda.0x00007f3d2c00a408;",
          "probability": 0.33249843456480904
        },
        {
          "type": "Lsom/Set$$Lambda.0x00007f3d2c009938;",
          "probability": 0.14965560425798372
        }],
        "notRecordedProbability": 0.0
      }
    },
    {
      "bci": 25,
      "branchTakenProbability": 0.963055729492799
    }]
  },
  {
    "stableLambdaName": "som.IdentitySet$$Lambda/0x00007f3d2c00a628.test(Object)",
    "method": "som.IdentitySet$$Lambda/0x00007f3d2c00a628.test(java.lang.Object)boolean",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.IdentitySet.lambda$contains$0(java.lang.Object, java.lang.Object)boolean",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "branchTakenProbability": -1.0
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$1.apply(havlak.BasicBlock)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 10,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 13,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary.atPut(som.Dictionary$CustomHash, java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": 0,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 18,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 23,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 36,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "UNKNOWN",
        "types": [],
        "notRecordedProbability": 1.0
      }
    },
    {
      "bci": 39,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 59,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 70,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 71,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 75,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary.getBucketIdx(int)int",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary.hash(som.Dictionary$CustomHash)int",
    "isMature": true,
    "compilerIRSize": 0,
    "data": [{
      "bci": 1,
      "branchTakenProbability": 1.0
    },
    {
      "bci": 7,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lhavlak/BasicBlock;",
          "probability": 1.0
        }],
        "notRecordedProbability": 0.0
      }
    }]
  },
  {
    "method": "havlak.BasicBlock.customHash()int",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "som.Dictionary.insertBucketEntry(som.Dictionary$CustomHash, java.lang.Object, int, som.Dictionary$Entry)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 8,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "UNKNOWN",
        "types": [],
        "notRecordedProbability": 1.0
      }
    },
    {
      "bci": 11,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 17,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 23,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 26,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 45,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "UNKNOWN",
        "types": [],
        "notRecordedProbability": 1.0
      }
    },
    {
      "bci": 48,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 54,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.IdentityDictionary.newEntry(som.Dictionary$CustomHash, java.lang.Object, int)som.Dictionary$Entry",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "som.IdentityDictionary$IdEntry.<init>(int, java.lang.Object, java.lang.Object, som.Dictionary$Entry)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 6,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary$Entry.<init>(int, java.lang.Object, java.lang.Object, som.Dictionary$Entry)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary.resize()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 6,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 9,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 20,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary.transferEntries(som.Dictionary$Entry[])void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 5,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 10,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 13,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 19,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 21,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 24,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 32,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 39,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 44,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 52,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary.splitBucket(som.Dictionary$Entry[], int, som.Dictionary$Entry)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 17,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 22,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 26,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 28,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 33,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 47,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 59,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 73,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 82,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 92,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 98,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 108,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 111,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 117,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 126,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 130,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$4.apply(java.lang.Integer)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 8,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 11,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 14,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 27,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 30,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 33,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 40,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 50,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 55,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 62,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 65,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "UNKNOWN",
        "types": [],
        "notRecordedProbability": 1.0
      }
    },
    {
      "bci": 69,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 72,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 75,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 82,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 89,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 102,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 105,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 113,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 121,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "stableLambdaName": "havlak.HavlakLoopFinder$4$$Lambda/0x00007f3d2c00a408.<init>(UnionFindNode)",
    "method": "havlak.HavlakLoopFinder$4$$Lambda/0x00007f3d2c00a408.<init>(havlak.UnionFindNode)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "stableLambdaName": "havlak.UnionFindNode$$Lambda/0x00007f3d2c009fb8.apply(Object)",
    "method": "havlak.UnionFindNode$$Lambda/0x00007f3d2c009fb8.apply(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 8,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.UnionFindNode.lambda$findSet$0(havlak.UnionFindNode)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder.isAncestor(int, int)boolean",
    "isMature": true,
    "compilerIRSize": 0,
    "data": [{
      "bci": 2,
      "branchTakenProbability": 0.42984257357973993
    },
    {
      "bci": 11,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 12,
      "branchTakenProbability": 0.12605042016806722
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$2.apply(havlak.BasicBlock)void",
    "isMature": false,
    "compilerIRSize": 0,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 8,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 11,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 14,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 21,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 33,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 36,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 43,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 50,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 53,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 57,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 60,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 70,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 77,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 80,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "UNKNOWN",
        "types": [],
        "notRecordedProbability": 1.0
      }
    },
    {
      "bci": 84,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 87,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary.at(som.Dictionary$CustomHash)java.lang.Object",
    "isMature": true,
    "compilerIRSize": 0,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 7,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 12,
      "branchTakenProbability": 0.0
    },
    {
      "bci": 18,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lsom/IdentityDictionary$IdEntry;",
          "probability": 1.0
        }],
        "notRecordedProbability": 0.0
      }
    },
    {
      "bci": 21,
      "branchTakenProbability": 0.0
    },
    {
      "bci": 25,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary.getBucket(int)som.Dictionary$Entry",
    "isMature": false,
    "compilerIRSize": 0,
    "data": [{
      "bci": 9,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.IdentityDictionary$IdEntry.match(int, java.lang.Object)boolean",
    "isMature": true,
    "compilerIRSize": 0,
    "data": [{
      "bci": 5,
      "branchTakenProbability": 0.0
    },
    {
      "bci": 13,
      "branchTakenProbability": 0.0
    }]
  },
  {
    "method": "som.Vector.at(int)java.lang.Object",
    "isMature": true,
    "compilerIRSize": 19,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 6,
      "branchTakenProbability": 1.0
    },
    {
      "bci": 16,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Set.contains(java.lang.Object)boolean",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "stableLambdaName": "som.Set$$Lambda/0x00007f3d2c009938.<init>(Object)",
    "method": "som.Set$$Lambda/0x00007f3d2c009938.<init>(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "stableLambdaName": "som.Set$$Lambda/0x00007f3d2c009938.test(Object)",
    "method": "som.Set$$Lambda/0x00007f3d2c009938.test(java.lang.Object)boolean",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "som.Set.lambda$contains$1(java.lang.Object, java.lang.Object)boolean",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "UNKNOWN",
        "types": [],
        "notRecordedProbability": 1.0
      }
    }]
  }]
}