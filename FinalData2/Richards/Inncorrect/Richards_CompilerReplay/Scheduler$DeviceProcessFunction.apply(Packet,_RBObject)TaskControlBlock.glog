{
  "identifier": "HotSpotCompilation-114[richards.Scheduler$DeviceProcessFunction.apply(Packet, RBObject)]",
  "method": "richards.Scheduler$DeviceProcessFunction.apply(richards.Packet, richards.RBObject)richards.TaskControlBlock",
  "entryBCI": -1,
  "codeSignature": "9d44ab270febad6e559cf9206e71ebf1d09d36291b7263366c8778abd0b3647a",
  "graphSignature": "c2bd282dde4a6feeec3b9b4fa61127184c346d2f6effffae9c6d6412c567c5bc",
  "result": true,
  "profiles": [{
    "method": "richards.Scheduler$DeviceProcessFunction.apply(richards.Packet, richards.RBObject)richards.TaskControlBlock",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.Scheduler$DeviceProcessFunction.apply(richards.Packet, richards.RBObject)richards.TaskControlBlock",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 13,
      "branchTakenProbability": 0.3333984375
    },
    {
      "bci": 20,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 26,
      "branchTakenProbability": 0.5001464986815118
    },
    {
      "bci": 33,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 41,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 50,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 57,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 64,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "richards.DeviceTaskDataRecord.setPending(richards.Packet)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.Scheduler.holdSelf()richards.TaskControlBlock",
    "isMature": false,
    "compilerIRSize": 0,
    "data": [{
      "bci": 15,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 22,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "richards.TaskState.setTaskHolding(boolean)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.Scheduler.queuePacket(richards.Packet)richards.TaskControlBlock",
    "isMature": true,
    "compilerIRSize": 0,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 5,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 13,
      "branchTakenProbability": 1.0
    },
    {
      "bci": 34,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 42,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 51,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "richards.Packet.setLink(richards.Packet)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.Packet.setIdentity(int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.Scheduler.findTask(int)richards.TaskControlBlock",
    "isMature": true,
    "compilerIRSize": 21,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 11,
      "branchTakenProbability": 1.0
    }]
  },
  {
    "method": "richards.TaskControlBlock.addInputAndCheckPriority(richards.Packet, richards.TaskControlBlock)richards.TaskControlBlock",
    "isMature": true,
    "compilerIRSize": 0,
    "data": [{
      "bci": 7,
      "branchTakenProbability": 0.3604302151075538
    },
    {
      "bci": 25,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 28,
      "branchTakenProbability": 0.7817755181853735
    },
    {
      "bci": 40,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "richards.TaskState.setPacketPending(boolean)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.RBObject.append(richards.Packet, richards.Packet)richards.Packet",
    "isMature": true,
    "compilerIRSize": 0,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 11,
      "branchTakenProbability": 0.5112149532710281
    },
    {
      "bci": 22,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 28,
      "branchTakenProbability": 0.9647266313932981
    },
    {
      "bci": 39,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "richards.Scheduler.markWaiting()richards.TaskControlBlock",
    "isMature": false,
    "compilerIRSize": 0,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "richards.TaskState.setTaskWaiting(boolean)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  }]
}