{
  "identifier": "HotSpotCompilation-109[richards.TaskControlBlock.runTask()]",
  "method": "richards.TaskControlBlock.runTask()richards.TaskControlBlock",
  "entryBCI": -1,
  "codeSignature": "6c9478f166a6a2e80c697303b794c7fad0e2d3f1f76185f0cfd8336e66ed090d",
  "graphSignature": "5c70591f5f2298bee8998223cba96d86e9a13a97fec916e2c5a99121a6621ef2",
  "result": true,
  "profiles": [{
    "method": "richards.TaskControlBlock.runTask()richards.TaskControlBlock",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.TaskControlBlock.runTask()richards.TaskControlBlock",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 4,
      "branchTakenProbability": 0.6474609375
    },
    {
      "bci": 14,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 27,
      "branchTakenProbability": 0.3673130193905817
    },
    {
      "bci": 31,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 38,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 57,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lrichards/Scheduler$DeviceProcessFunction;",
          "probability": 0.4236328125
        },
        {
          "type": "Lrichards/Scheduler$HandlerProcessFunction;",
          "probability": 0.3521484375
        },
        {
          "type": "Lrichards/Scheduler$IdleProcessFunction;",
          "probability": 0.15390625
        },
        {
          "type": "Lrichards/Scheduler$WorkerProcessFunction;",
          "probability": 0.0703125
        }],
        "notRecordedProbability": 0.0
      }
    }]
  },
  {
    "method": "richards.TaskState.isWaitingWithPacket()boolean",
    "isMature": true,
    "compilerIRSize": 0,
    "data": [{
      "bci": 4,
      "branchTakenProbability": 0.37421875
    },
    {
      "bci": 11,
      "branchTakenProbability": 0.43664169787765295
    },
    {
      "bci": 18,
      "branchTakenProbability": 0.0
    }]
  },
  {
    "method": "richards.TaskState.packetPending()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.TaskState.running()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.Scheduler$DeviceProcessFunction.apply(richards.Packet, richards.RBObject)richards.TaskControlBlock",
    "isMature": true,
    "compilerIRSize": 0,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 13,
      "branchTakenProbability": 0.3330564784053156
    },
    {
      "bci": 20,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 26,
      "branchTakenProbability": 0.5006226650062267
    },
    {
      "bci": 33,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 41,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 50,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 57,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 64,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "richards.Scheduler$HandlerProcessFunction.apply(richards.Packet, richards.RBObject)richards.TaskControlBlock",
    "isMature": false,
    "compilerIRSize": 0,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 9,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 14,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 17,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 22,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 30,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 37,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 43,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 50,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 56,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 64,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 70,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 73,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 82,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 90,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 96,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 103,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 110,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 113,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 120,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 125,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 126,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 135,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 144,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "richards.Scheduler$IdleProcessFunction.apply(richards.Packet, richards.RBObject)richards.TaskControlBlock",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 7,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 12,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 17,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 20,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 27,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 33,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 38,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 43,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 47,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 48,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 56,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 62,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 66,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 70,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 78,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "richards.Scheduler$WorkerProcessFunction.apply(richards.Packet, richards.RBObject)richards.TaskControlBlock",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 9,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 16,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 23,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 26,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 34,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 39,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 42,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 47,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 56,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 61,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 66,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 70,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 75,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 80,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 84,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 92,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 98,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 110,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "richards.DeviceTaskDataRecord.setPending(richards.Packet)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.HandlerTaskDataRecord.workIn(richards.Packet)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.HandlerTaskDataRecord.deviceIn(richards.Packet)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.Packet.setDatum(int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.IdleTaskDataRecord.setCount(int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.IdleTaskDataRecord.setControl(int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.WorkerTaskDataRecord.setDestination(int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.Packet.setIdentity(int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.WorkerTaskDataRecord.setCount(int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.Scheduler.markWaiting()richards.TaskControlBlock",
    "isMature": false,
    "compilerIRSize": 0,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "richards.TaskState.setTaskWaiting(boolean)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.Scheduler.queuePacket(richards.Packet)richards.TaskControlBlock",
    "isMature": false,
    "compilerIRSize": 0,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 5,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 13,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 34,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 42,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 51,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "richards.Packet.setLink(richards.Packet)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.Scheduler.findTask(int)richards.TaskControlBlock",
    "isMature": true,
    "compilerIRSize": 0,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 11,
      "branchTakenProbability": 1.0
    }]
  },
  {
    "method": "richards.TaskControlBlock.addInputAndCheckPriority(richards.Packet, richards.TaskControlBlock)richards.TaskControlBlock",
    "isMature": false,
    "compilerIRSize": 0,
    "data": [{
      "bci": 7,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 25,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 28,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 40,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "richards.TaskState.setPacketPending(boolean)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "richards.RBObject.append(richards.Packet, richards.Packet)richards.Packet",
    "isMature": false,
    "compilerIRSize": 0,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 11,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 22,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 28,
      "branchTakenProbability": -1.0
    },
    {
      "bci": 39,
      "exceptionSeen": "FALSE"
    }]
  }]
}