{
  "identifier": "HotSpotCompilation-262[havlak.LoopTesterApp.main(int, int, int, int, int)]",
  "method": "havlak.LoopTesterApp.main(int, int, int, int, int)int[]",
  "entryBCI": -1,
  "codeSignature": "c80b15035aa1a52e9e6f4a8fa2d914d4ba1bbe0f4fd18cb9cbaf61013e0458c1",
  "graphSignature": "75e747e5998bf41635746aa10fbf7a5a8a555ee598c0c2db71b8b77a63b0bf2d",
  "result": true,
  "profiles": [{
    "method": "havlak.LoopTesterApp.main(int, int, int, int, int)int[]",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "havlak.LoopTesterApp.main(int, int, int, int, int)int[]",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 6,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 15,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 23,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 32,
      "branchTakenProbability": 0.01959532775898385
    },
    {
      "bci": 40,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 43,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 56,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 60,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 68,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 71,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 78,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 81,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopStructureGraph.getNumLoops()int",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Vector.size()int",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "havlak.ControlFlowGraph.getNumNodes()int",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopTesterApp.constructSimpleCFG()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 11,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 20,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 34,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.ControlFlowGraph.createNode(int)havlak.BasicBlock",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 8,
      "branchTakenProbability": 0.33242214195060044
    },
    {
      "bci": 16,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 19,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 31,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 41,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 49,
      "branchTakenProbability": 0.999707145646232
    }]
  },
  {
    "method": "som.Vector.at(int)java.lang.Object",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 6,
      "branchTakenProbability": 0.9995118140988088
    },
    {
      "bci": 16,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.BasicBlock.<init>(int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Vector.<init>(int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 6,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Vector.atPut(int, java.lang.Object)void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 6,
      "branchTakenProbability": 0.9973764757324005
    },
    {
      "bci": 13,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 17,
      "branchTakenProbability": 0.5
    },
    {
      "bci": 45,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 53,
      "branchTakenProbability": 0.0
    }]
  },
  {
    "method": "java.util.Arrays.copyOf(java.lang.Object[], int)java.lang.Object[]",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 3,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 6,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "java.util.Arrays.copyOf(java.lang.Object[], int, java.lang.Class)java.lang.Object[]",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 3,
      "branchTakenProbability": 0.015390609779855834
    },
    {
      "bci": 7,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 14,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 18,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 21,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "[Ljava/lang/invoke/LambdaForm$Name;",
          "probability": 0.9620253164556962
        },
        {
          "type": "[Ljava/lang/Class;",
          "probability": 0.0379746835443038
        }],
        "notRecordedProbability": 0.0
      }
    },
    {
      "bci": 30,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 32,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 35,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopTesterApp.buildBaseLoop(int)int",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 3,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 9,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 16,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 24,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 33,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 43,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 49,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 56,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 63,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopTesterApp.buildStraight(int, int)int",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "branchTakenProbability": 0.5
    },
    {
      "bci": 16,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopTesterApp.buildConnect(int, int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 10,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.BasicBlockEdge.<init>(havlak.ControlFlowGraph, int, int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 7,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 16,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 30,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 41,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 46,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.BasicBlock.addOutEdge(havlak.BasicBlock)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.BasicBlock.addInEdge(havlak.BasicBlock)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.ControlFlowGraph.addEdge(havlak.BasicBlockEdge)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopTesterApp.buildDiamond(int)int",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 14,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 30,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 48,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 66,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Vector.append(java.lang.Object)void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 8,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 9,
      "branchTakenProbability": 0.9996094512790471
    },
    {
      "bci": 22,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 39,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopTesterApp.addDummyLoops(int)void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "branchTakenProbability": 6.509992839007877E-5
    },
    {
      "bci": 12,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopTesterApp.findLoops(havlak.LoopStructureGraph)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 9,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 14,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder.<init>(havlak.ControlFlowGraph, havlak.LoopStructureGraph)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Vector.<init>()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "som.IdentityDictionary.<init>()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "som.Dictionary.<init>(int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 6,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder.findLoops()void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 7,
      "branchTakenProbability": 1.0
    },
    {
      "bci": 15,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 23,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 30,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 37,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 45,
      "branchTakenProbability": 0.0
    },
    {
      "bci": 50,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 57,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 65,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 72,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 87,
      "branchTakenProbability": 0.04453006003046322
    },
    {
      "bci": 101,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 115,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 130,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 138,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 143,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 152,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 158,
      "branchTakenProbability": 0.0409038429820221
    },
    {
      "bci": 174,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 175,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 182,
      "branchTakenProbability": 0.0
    },
    {
      "bci": 188,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 208,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 211,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 218,
      "branchTakenProbability": 0.7097412088384489
    },
    {
      "bci": 229,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 232,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 235,
      "branchTakenProbability": 0.5261038726022439
    },
    {
      "bci": 240,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 243,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 254,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 257,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 260,
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lsom/Set;",
          "probability": 1.0
        }],
        "notRecordedProbability": 0.0
      }
    },
    {
      "bci": 272,
      "branchTakenProbability": 1.0
    },
    {
      "bci": 283,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 293,
      "branchTakenProbability": 0.2901367271476481
    },
    {
      "bci": 301,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 305,
      "branchTakenProbability": 1.0
    },
    {
      "bci": 319,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 323,
      "branchTakenProbability": 0.14671013633669236
    },
    {
      "bci": 331,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 341,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Set.<init>()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "som.Set.<init>(int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.UnionFindNode.<init>()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Set.size()int",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Vector.removeAll()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 15,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 16,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary.removeAll()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 6,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder.initAllNodes()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 15,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 23,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 27,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$1.<init>(havlak.HavlakLoopFinder)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 6,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Vector.forEach(som.ForEachInterface)void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 10,
      "branchTakenProbability": 0.34481830417227455
    },
    {
      "bci": 19,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 20,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lhavlak/HavlakLoopFinder$1;",
          "probability": 0.6286976170912079
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$2;",
          "probability": 0.13804437140509448
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$4;",
          "probability": 0.10353327855382087
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$5;",
          "probability": 0.07785538208709943
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$6;",
          "probability": 0.025986031224322102
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$3;",
          "probability": 0.025883319638455218
        }],
        "notRecordedProbability": 0.0
      }
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$1.apply(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$1.apply(havlak.BasicBlock)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 10,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 13,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary.atPut(som.Dictionary$CustomHash, java.lang.Object)void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 18,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 23,
      "branchTakenProbability": 0.25092755321226323
    },
    {
      "bci": 36,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lsom/IdentityDictionary;",
          "probability": 1.0
        }],
        "notRecordedProbability": 0.0
      }
    },
    {
      "bci": 39,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 59,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 70,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 71,
      "branchTakenProbability": 0.9991212653778558
    },
    {
      "bci": 75,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary.getBucketIdx(int)int",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary.hash(som.Dictionary$CustomHash)int",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "branchTakenProbability": 1.0
    },
    {
      "bci": 7,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lhavlak/BasicBlock;",
          "probability": 1.0
        }],
        "notRecordedProbability": 0.0
      }
    }]
  },
  {
    "method": "havlak.BasicBlock.customHash()int",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "som.Dictionary.insertBucketEntry(som.Dictionary$CustomHash, java.lang.Object, int, som.Dictionary$Entry)void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 8,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lsom/IdentityDictionary$IdEntry;",
          "probability": 1.0
        }],
        "notRecordedProbability": 0.0
      }
    },
    {
      "bci": 11,
      "branchTakenProbability": 0.005190311418685121
    },
    {
      "bci": 17,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 23,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 26,
      "branchTakenProbability": 0.0
    },
    {
      "bci": 45,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lsom/IdentityDictionary;",
          "probability": 1.0
        }],
        "notRecordedProbability": 0.0
      }
    },
    {
      "bci": 48,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.IdentityDictionary$IdEntry.match(int, java.lang.Object)boolean",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "branchTakenProbability": 0.0017543859649122807
    },
    {
      "bci": 13,
      "branchTakenProbability": 0.0
    }]
  },
  {
    "method": "som.IdentityDictionary.newEntry(som.Dictionary$CustomHash, java.lang.Object, int)som.Dictionary$Entry",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "som.IdentityDictionary$IdEntry.<init>(int, java.lang.Object, java.lang.Object, som.Dictionary$Entry)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 6,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary$Entry.<init>(int, java.lang.Object, java.lang.Object, som.Dictionary$Entry)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary.resize()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 6,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 9,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 20,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder.doDFS(havlak.BasicBlock, int)int",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 8,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 17,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 20,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 26,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 38,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 41,
      "branchTakenProbability": 0.4073779457094561
    },
    {
      "bci": 48,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 51,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 62,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 65,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 68,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 73,
      "branchTakenProbability": 0.375
    },
    {
      "bci": 82,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 98,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.UnionFindNode.initNode(havlak.BasicBlock, int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "som.Dictionary.at(som.Dictionary$CustomHash)java.lang.Object",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 7,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 12,
      "branchTakenProbability": 0.0
    },
    {
      "bci": 18,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lsom/IdentityDictionary$IdEntry;",
          "probability": 1.0
        }],
        "notRecordedProbability": 0.0
      }
    },
    {
      "bci": 21,
      "branchTakenProbability": 0.0
    },
    {
      "bci": 25,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Dictionary.getBucket(int)som.Dictionary$Entry",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 9,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder.identifyEdges(int)void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "branchTakenProbability": 0.08335814230425721
    },
    {
      "bci": 13,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 22,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 28,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 29,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 34,
      "branchTakenProbability": 1.0
    },
    {
      "bci": 52,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder.processEdges(havlak.BasicBlock, int)void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 4,
      "branchTakenProbability": 0.0
    },
    {
      "bci": 8,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 17,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 20,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.BasicBlock.getNumPred()int",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$2.<init>(havlak.HavlakLoopFinder, int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 11,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$2.apply(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder$2.apply(havlak.BasicBlock)void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 4,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 8,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 11,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 14,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 21,
      "branchTakenProbability": 0.0
    },
    {
      "bci": 33,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 36,
      "branchTakenProbability": 0.8125366139425894
    },
    {
      "bci": 43,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 50,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 53,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 57,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 60,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 70,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 77,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 80,
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lsom/Set;",
          "probability": 1.0
        }],
        "notRecordedProbability": 0.0
      }
    },
    {
      "bci": 84,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 87,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.HavlakLoopFinder.isAncestor(int, int)boolean",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "branchTakenProbability": 0.42843194688537395
    },
    {
      "bci": 11,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 12,
      "branchTakenProbability": 0.1250427058421592
    }]
  },
  {
    "method": "som.Set.add(java.lang.Object)void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lsom/Set;",
          "probability": 0.5385666861941028
        },
        {
          "type": "Lsom/IdentitySet;",
          "probability": 0.4614333138058973
        }],
        "notRecordedProbability": 0.0
      }
    },
    {
      "bci": 5,
      "branchTakenProbability": 0.0388444270934999
    },
    {
      "bci": 13,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Set.contains(java.lang.Object)boolean",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "java.lang.invoke.Invokers$Holder.linkToTargetMethod(java.lang.Object, java.lang.Object)java.lang.Object",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Ljava/lang/invoke/DirectMethodHandle$Constructor;",
          "probability": 1.0
        }],
        "notRecordedProbability": 0.0
      }
    }]
  },
  {
    "method": "java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object)java.lang.Object",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "java.lang.invoke.DirectMethodHandle.allocateInstance(java.lang.Object)java.lang.Object",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 12,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "java.lang.invoke.DirectMethodHandle.constructorMethod(java.lang.Object)java.lang.Object",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "stableLambdaName": "som.Set$$Lambda/0x00007ff20c009938.<init>(Object)",
    "method": "som.Set$$Lambda/0x00007ff20c009938.<init>(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Set.hasSome(som.TestInterface)boolean",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.Vector.hasSome(som.TestInterface)boolean",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 10,
      "branchTakenProbability": 0.5344997266265719
    },
    {
      "bci": 19,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 20,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "FALSE",
        "types": [{
          "type": "Lsom/IdentitySet$$Lambda.0x00007ff20c00a628;",
          "probability": 0.5184402161146348
        },
        {
          "type": "Lhavlak/HavlakLoopFinder$4$$Lambda.0x00007ff20c00a408;",
          "probability": 0.3333333333333333
        },
        {
          "type": "Lsom/Set$$Lambda.0x00007ff20c009938;",
          "probability": 0.14822645055203196
        }],
        "notRecordedProbability": 0.0
      }
    },
    {
      "bci": 25,
      "branchTakenProbability": 0.962179938924125
    }]
  },
  {
    "stableLambdaName": "som.Set$$Lambda/0x00007ff20c009938.test(Object)",
    "method": "som.Set$$Lambda/0x00007ff20c009938.test(java.lang.Object)boolean",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "som.Set.lambda$contains$1(java.lang.Object, java.lang.Object)boolean",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE",
      "typeProfile": {
        "nullSeen": "UNKNOWN",
        "types": [],
        "notRecordedProbability": 1.0
      }
    }]
  },
  {
    "method": "havlak.LoopTesterApp.constructCFG(int, int, int)void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 9,
      "branchTakenProbability": 0.09025270758122744
    },
    {
      "bci": 20,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 42,
      "branchTakenProbability": 0.09097472924187726
    },
    {
      "bci": 53,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 64,
      "branchTakenProbability": 0.16666666666666666
    },
    {
      "bci": 70,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 85,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 95,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopStructureGraph.calculateNestingLevel()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 12,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 21,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopStructureGraph$1.<init>(havlak.LoopStructureGraph)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 6,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopStructureGraph$1.apply(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopStructureGraph$1.apply(havlak.SimpleLoop)void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 4,
      "branchTakenProbability": 9.763718023823472E-5
    },
    {
      "bci": 8,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 11,
      "branchTakenProbability": 0.6667317644761254
    },
    {
      "bci": 19,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 22,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.SimpleLoop.setParent(havlak.SimpleLoop)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 10,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.SimpleLoop.addChildLoop(havlak.SimpleLoop)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.IdentitySet.contains(java.lang.Object)boolean",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "stableLambdaName": "som.IdentitySet$$Lambda/0x00007ff20c00a628.<init>(Object)",
    "method": "som.IdentitySet$$Lambda/0x00007ff20c00a628.<init>(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "stableLambdaName": "som.IdentitySet$$Lambda/0x00007ff20c00a628.test(Object)",
    "method": "som.IdentitySet$$Lambda/0x00007ff20c00a628.test(java.lang.Object)boolean",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.IdentitySet.lambda$contains$0(java.lang.Object, java.lang.Object)boolean",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "branchTakenProbability": 0.998426435877262
    }]
  },
  {
    "method": "havlak.LoopStructureGraph.calculateNestingLevelRec(havlak.SimpleLoop, int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 6,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 16,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 19,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.SimpleLoop.setDepthLevel(int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "som.Set.forEach(som.ForEachInterface)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopStructureGraph$2.<init>(havlak.LoopStructureGraph, int, havlak.SimpleLoop)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 16,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopStructureGraph$2.apply(java.lang.Object)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 5,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.LoopStructureGraph$2.apply(havlak.SimpleLoop)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 11,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 22,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 27,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 31,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 34,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "java.lang.Math.max(int, int)int",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 2,
      "branchTakenProbability": 0.329037297402851
    }]
  },
  {
    "method": "havlak.SimpleLoop.setNestingLevel(int)void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 6,
      "branchTakenProbability": 0.5
    }]
  },
  {
    "method": "havlak.SimpleLoop.setIsRoot()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "havlak.LoopStructureGraph.<init>()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 27,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 38,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 49,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 70,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "havlak.SimpleLoop.setCounter(int)void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  },
  {
    "method": "havlak.SimpleLoop.<init>(havlak.BasicBlock, boolean)void",
    "isMature": true,
    "compilerIRSize": -1,
    "data": [{
      "bci": 1,
      "exceptionSeen": "FALSE"
    },
    {
      "bci": 52,
      "branchTakenProbability": 3.9051059259982425E-4
    },
    {
      "bci": 60,
      "exceptionSeen": "FALSE"
    }]
  },
  {
    "method": "som.IdentitySet.<init>()void",
    "isMature": false,
    "compilerIRSize": -1,
    "data": []
  }]
}